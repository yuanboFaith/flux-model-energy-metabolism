d.Ra <- d.iso.all %>% select(treatment, ID, Fcirc.anim.gBW) %>% spread(treatment,  Fcirc.anim.gBW)
t.test(x = d.Ra$basal, y = d.Ra$iso, paired = T)
d.TIC <- d.iso.all %>% select(treatment, ID, TIC) %>% spread(treatment,  TIC)
t.test(x = d.TIC$basal, y = d.TIC$iso, paired = T)
rm(list=ls())
library(ComplexHeatmap)
library(scales) # for color scale
library(mgcv)
library(ggpmisc)
library(ggbeeswarm)
library(readxl)
library(RColorBrewer)
library(viridis)
library(ggsci)
library(rebus)
library(matrixStats)
library(limSolve)
library(xlsx)
library(cowplot)
library(rstatix)
library(ggpubr)
library(tidyverse)
load("/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/raw data/7_core_production_flux.RData")
# hyperinsulinemia clamp
d.hyperInsulinemia <- d.normalized.tidy.23 %>%
mutate(mouse_ID = str_sub(sample, -4)) %>%
separate(mouse_ID, into = c("time", "mouse_ID")) %>%
group_by(Compound) %>%
mutate(enrich.weighted = C_Label / max(C_Label) * enrichment) %>%
group_by(mouse_ID, time, .add = T) %>%
summarise(enrich = sum(enrich.weighted))
d.clamp <- read_excel("/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/raw data/hyperinsulinemia.xlsx",
range = "A15:F45")
d.clamp
# extract endogenous production of glucose and palmitate in WT
d.clamp.ALL <- d.Fcirc.standard.atom_art.or.tail %>%
filter(phenotype == "WT" & Compound %in% c("Glucose", "C16:0")) %>%
select(Compound, Fcirc_atom.g.BW, mouse_ID) %>%
mutate(treatment = "basal", timepoint = "T0", Index = "Endo_Ra") %>%
relocate(treatment, mouse_ID, timepoint, Fcirc_atom.g.BW, Compound, Index) %>%
# combine with clamp data
bind_rows(d.clamp)
func.plt.clamp <- function(data, myTitle){
data %>%
ggplot(aes(x = timepoint, y = Fcirc_atom.g.BW, fill = timepoint)) +
stat_summary(geom = "bar", fun = mean, color = "black", alpha = .7) +
stat_summary(geom = "errorbar", fun.data = mean_sdl, fun.args = list(mult = 1),
width = .3) +
geom_quasirandom(width = .2, size = 2, color = "grey20") +
facet_grid(.~Compound, scales = "free", space = "free") +
theme.myClassic +
theme(axis.title.y = element_text(margin = margin(r = 15)),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
scale_y_continuous(expand = expansion(mult = c(0, .1)), name = myTitle,
# limits = c(0, 2100)
) +
scale_x_discrete(labels = c("T0" = "basal", "T1" = "Clamp T1", "T2" = "Clamp T2"), name = NULL,
expand = expansion(add = .8)) +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
}
# C16:0 endogenous production
p1 <- d.clamp.ALL %>% filter(Index == "Endo_Ra" & Compound == "C16:0") %>%
func.plt.clamp(myTitle = "Endogenous Ra = Rd (nmol C/min/g)")
p1
# Glucose endogenous production
p2 <- d.clamp.ALL %>% filter(Index == "Endo_Ra" & Compound == "Glucose") %>%
func.plt.clamp(myTitle = "Endogenous Ra (nmol C/min/g)")
p2
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index == "Total Ra" & Compound == "Glucose") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)") +
scale_fill_manual(values = c("tomato", "tomato"))
p3
d.clamp.ALL
d.clamp.ALL
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter( Compound == "Glucose") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)") +
scale_fill_manual(values = c("tomato", "tomato"))
p3
d.clamp.ALL
d.clamp.ALL
d.clamp.ALL %>% filter(Index == "Endo_Ra" & Compound == "Glucose")
d.clamp.ALL %>%
filter(Index == "Total Ra" & Compound == "Glucose")
d.clamp.ALL
# Glucose endogenous production
p2 <- d.clamp.ALL %>% filter(Index == "Endo_Ra" & Compound == "Glucose") %>%
func.plt.clamp(myTitle = "Endogenous Ra (nmol C/min/g)")
p2
d.clamp.ALL %>% filter(Index == "Endo_Ra" & Compound == "Glucose")
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% c("Total Ra", "Endo_Ra") & Compound == "Glucose") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)") +
scale_fill_manual(values = c("tomato", "tomato"))
p3
d.clamp.ALL %>%
filter(Index %in% c("Total Ra", "Endo_Ra") & Compound == "Glucose")
d.clamp.ALL %>%
filter(Index %in% c("Total Ra", "Endo_Ra") & Compound == "Glucose") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)")
d.clamp.ALL %>%
filter(Index %in% c("Total Ra", "Endo_Ra") & Compound == "Glucose")
d.clamp.ALL %>% filter(Index == "Endo_Ra" & Compound == "Glucose")
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)") +
scale_fill_manual(values = c("tomato", "tomato"))
p3
d.clamp.ALL
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)") +
scale_fill_manual(values = c("tomato", "tomato"))
p3
d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal")
d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)")
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)") +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
p3
plot_grid(p1, p2, p3, rel_widths = c(2, 2.8, 2), nrow = 1)
ggsave(filename = "Clamp.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 4, width = 9)
func.plt.clamp <- function(data, myTitle, pt.size = 2){
data %>%
ggplot(aes(x = timepoint, y = Fcirc_atom.g.BW, fill = timepoint)) +
stat_summary(geom = "bar", fun = mean, color = "black", alpha = .7) +
stat_summary(geom = "errorbar", fun.data = mean_sdl, fun.args = list(mult = 1),
width = .3) +
geom_quasirandom(width = .2, size = pt.size, color = "grey20") +
facet_grid(.~Compound, scales = "free", space = "free") +
theme.myClassic +
theme(axis.title.y = element_text(margin = margin(r = 15)),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
scale_y_continuous(expand = expansion(mult = c(0, .1)), name = myTitle,
# limits = c(0, 2100)
) +
scale_x_discrete(labels = c("T0" = "basal", "T1" = "Clamp T1", "T2" = "Clamp T2"), name = NULL,
expand = expansion(add = .8)) +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
}
# C16:0 endogenous production
p1 <- d.clamp.ALL %>% filter(Index == "Endo_Ra" & Compound == "C16:0") %>%
func.plt.clamp(myTitle = "Endogenous Ra = Rd (nmol C/min/g)")
p1
# Glucose endogenous production
p2 <- d.clamp.ALL %>% filter(Index == "Endo_Ra" & Compound == "Glucose") %>%
func.plt.clamp(myTitle = "Endogenous Ra (nmol C/min/g)")
p2
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)") +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
p3
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)", pt.size = 1) +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
p3
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)") +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
p3
func.plt.clamp <- function(data, myTitle, pt.size = 2){
data %>%
ggplot(aes(x = timepoint, y = Fcirc_atom.g.BW, fill = timepoint)) +
stat_summary(geom = "bar", fun = mean, color = "black", alpha = .7) +
stat_summary(geom = "errorbar", fun.data = mean_sdl, fun.args = list(mult = 1),
width = .3) +
geom_quasirandom(width = .2, size = pt.size, color = "grey20") +
facet_grid(.~Compound, scales = "free", space = "free") +
theme.myClassic +
theme(axis.title.y = element_text(margin = margin(r = 15)),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
scale_y_continuous(expand = expansion(mult = c(0, .1)), name = myTitle,
# limits = c(0, 2100)
) +
scale_x_discrete(labels = c("T0" = "basal", "T1" = "Clamp T1", "T2" = "Clamp T2"), name = NULL,
expand = expansion(add = .8)) +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
}
# C16:0 endogenous production
p1 <- d.clamp.ALL %>% filter(Index == "Endo_Ra" & Compound == "C16:0") %>%
func.plt.clamp(myTitle = "Endogenous Ra = Rd (nmol C/min/g)")
p1
# Glucose endogenous production
p2 <- d.clamp.ALL %>% filter(Index == "Endo_Ra" & Compound == "Glucose") %>%
func.plt.clamp(myTitle = "Endogenous Ra (nmol C/min/g)")
p2
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)") +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)",
pt.size = c(1, 10)) +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
p3
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)",
pt.size = c(rep(1, 10), rep(2, 5))) +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
p3
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)",
pt.size = c(rep(1, 22), rep(2, 5))) +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
p3
# Glucose total consumption
p3 <- d.clamp.ALL %>%
filter(Index %in% "Total Ra" & Compound == "Glucose" |
Index == "Endo_Ra" & Compound == "Glucose" & treatment == "basal") %>%
func.plt.clamp(myTitle = "Rd (nmol C/min/g)",
pt.size = c(rep(1, 17), rep(2, 10))) +
scale_fill_manual(values = c("steelblue2", "tomato", "tomato"))
p3
plot_grid(p1, p2, p3, rel_widths = c(2, 2.8, 2.8), nrow = 1)
ggsave(filename = "Clamp.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 4, width = 9)
p3
plot_grid(p1, p2, p3, rel_widths = c(2, 2.8, 2.8), nrow = 1)
ggsave(filename = "Clamp.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 4, width = 9)
library(tidyverse)
library(ggridges)
library(tidyverse)
library(ggridges)
library(tidyverse)
l <- lincoln_weather %>%
mutate(
.after = 1,         # put new columns after the 1st column
# process the time
CST = ymd(CST), # convert into a <date> format
month = month(CST, label = T, abbr = F), # extract the month of the year
week = isoweek(CST),  # calculate the week of the year
day = day(CST),       # extract the day of the date
wday = wday(CST, week_start = 1, label = T) ) %>%  # calculate day of the week (Monday as 1st day)
mutate(week = ifelse(week == 53, 0, week),
week = factor(week) %>% fct_rev())
l %>%
ggplot(aes(x = wday, y = week, fill = `Max Temperature [F]`)) +
geom_raster() +
facet_wrap(~month, scales = "free", nrow = 3) +
scale_fill_viridis_c(option = "A", breaks = seq(10, 90, 20)) +
# label the day of the dates
geom_text(aes(label = day), color = "snow2", size = 3) +
theme_void() +
theme(legend.position = "right",
strip.text = element_text(hjust = 0, face = "bold", size = 13,
margin = margin(b = 3, unit = "pt")),
strip.clip = "off",
panel.spacing = unit(10, "pt"),
axis.text.x = element_text(color = "snow4", size = 7,
margin = margin(b = 3, unit = "pt")),
strip.placement = "outside",
plot.margin = margin(rep(10, 4), unit = "pt")) +
coord_cartesian(clip = "off") +
scale_x_discrete(position = "top") +
# adjust colorbar
guides(fill = guide_colorbar(
barheight = unit(200, unit = "pt"),
barwidth = unit(10, unit = "pt"),
title.position = "left",
title.theme = element_text(
angle = 90, hjust = .5,
margin = margin(l = 10, r = 10, unit = "pt"))))
l %>%
ggplot(aes(x = wday, y = week, fill = `Max Humidity`)) +
geom_raster() +
facet_wrap(~month, scales = "free", nrow = 3) +
scale_fill_viridis_c(option = "G",
breaks = seq(60, 100, 5),
trans = "log") +
# label the day of the dates
geom_text(aes(label = day), color = "snow2", size = 3) +
theme_void() +
theme(legend.position = "right",
strip.text = element_text(hjust = 0, face = "bold", size = 13,
margin = margin(b = 3, unit = "pt")),
strip.clip = "off",
panel.spacing = unit(10, "pt"),
axis.text.x = element_text(color = "snow4", size = 7,
margin = margin(b = 3, unit = "pt")),
strip.placement = "outside",
plot.margin = margin(rep(10, 4), unit = "pt")) +
coord_cartesian(clip = "off") +
scale_x_discrete(position = "top") +
# adjust colorbar
guides(fill = guide_colorbar(
barheight = unit(200, unit = "pt"),
barwidth = unit(10, unit = "pt"),
title.position = "left",
title.theme = element_text(
angle = 90, hjust = .5,
margin = margin(l = 10, r = 10, unit = "pt"))))
l %>%
filter(month > lag(month) | # the end of a month
month < lead(month)) # the start of a new month
l %>%
filter(month > lag(month) | # the end of a month
month < lead(month)) # the start of a new month
l %>%
ggplot(aes(x = wday, y = week, fill = `Max Temperature [F]`)) +
geom_raster() +
facet_wrap(~month, scales = "free", nrow = 3) +
scale_fill_viridis_c(option = "A", breaks = seq(10, 90, 20)) +
# label the day of the dates
geom_text(aes(label = day), color = "snow2", size = 3) +
theme_void() +
theme(legend.position = "right",
strip.text = element_text(hjust = 0, face = "bold", size = 13,
margin = margin(b = 3, unit = "pt")),
strip.clip = "off",
panel.spacing = unit(10, "pt"),
axis.text.x = element_text(color = "snow4", size = 7,
margin = margin(b = 3, unit = "pt")),
strip.placement = "outside",
plot.margin = margin(rep(10, 4), unit = "pt")) +
coord_cartesian(clip = "off") +
scale_x_discrete(position = "top") +
# adjust colorbar
guides(fill = guide_colorbar(
barheight = unit(200, unit = "pt"),
barwidth = unit(10, unit = "pt"),
title.position = "left",
title.theme = element_text(
angle = 90, hjust = .5,
margin = margin(l = 10, r = 10, unit = "pt"))))
l %>%
ggplot(aes(x = wday, y = week, fill = `Max Humidity`)) +
geom_raster() +
facet_wrap(~month, scales = "free", nrow = 3) +
scale_fill_viridis_c(option = "G",
breaks = seq(60, 100, 5),
trans = "log") +
# label the day of the dates
geom_text(aes(label = day), color = "snow2", size = 3) +
theme_void() +
theme(legend.position = "right",
strip.text = element_text(hjust = 0, face = "bold", size = 13,
margin = margin(b = 3, unit = "pt")),
strip.clip = "off",
panel.spacing = unit(10, "pt"),
axis.text.x = element_text(color = "snow4", size = 7,
margin = margin(b = 3, unit = "pt")),
strip.placement = "outside",
plot.margin = margin(rep(10, 4), unit = "pt")) +
coord_cartesian(clip = "off") +
scale_x_discrete(position = "top") +
# adjust colorbar
guides(fill = guide_colorbar(
barheight = unit(200, unit = "pt"),
barwidth = unit(10, unit = "pt"),
title.position = "left",
title.theme = element_text(
angle = 90, hjust = .5,
margin = margin(l = 10, r = 10, unit = "pt"))))
l %>%
filter(month > lag(month) | # the end of a month
month < lead(month)) # the start of a new month
l %>%
ggplot(aes(x = wday, y = week, fill = `Max Temperature [F]`)) +
geom_raster() +
facet_wrap(~month, scales = "free", nrow = 3) +
scale_fill_viridis_c(option = "A", breaks = seq(10, 90, 20)) +
# label the day of the dates
geom_text(aes(label = day), color = "snow2", size = 3) +
theme_void() +
theme(legend.position = "right",
strip.text = element_text(hjust = 0, face = "bold", size = 13,
margin = margin(b = 3, unit = "pt")),
strip.clip = "off",
panel.spacing = unit(10, "pt"),
axis.text.x = element_text(color = "snow4", size = 7,
margin = margin(b = 3, unit = "pt")),
strip.placement = "outside",
plot.margin = margin(rep(10, 4), unit = "pt")) +
coord_cartesian(clip = "off") +
scale_x_discrete(position = "top") +
# adjust colorbar
guides(fill = guide_colorbar(
barheight = unit(200, unit = "pt"),
barwidth = unit(10, unit = "pt"),
title.position = "left",
title.theme = element_text(
angle = 90, hjust = .5,
margin = margin(l = 10, r = 10, unit = "pt"))))
l %>%
ggplot(aes(x = wday, y = week, fill = `Max Humidity`)) +
geom_raster() +
facet_wrap(~month, scales = "free", nrow = 3) +
scale_fill_viridis_c(option = "G",
breaks = seq(60, 100, 5),
trans = "log") +
# label the day of the dates
geom_text(aes(label = day), color = "snow2", size = 3) +
theme_void() +
theme(legend.position = "right",
strip.text = element_text(hjust = 0, face = "bold", size = 13,
margin = margin(b = 3, unit = "pt")),
strip.clip = "off",
panel.spacing = unit(10, "pt"),
axis.text.x = element_text(color = "snow4", size = 7,
margin = margin(b = 3, unit = "pt")),
strip.placement = "outside",
plot.margin = margin(rep(10, 4), unit = "pt")) +
coord_cartesian(clip = "off") +
scale_x_discrete(position = "top") +
# adjust colorbar
guides(fill = guide_colorbar(
barheight = unit(200, unit = "pt"),
barwidth = unit(10, unit = "pt"),
title.position = "left",
title.theme = element_text(
angle = 90, hjust = .5,
margin = margin(l = 10, r = 10, unit = "pt"))))
l %>%
ggplot(aes(x = wday, y = week, fill = `Max Temperature [F]`)) +
geom_raster() +
facet_wrap(~month, scales = "free", nrow = 3) +
scale_fill_viridis_c(option = "A", breaks = seq(10, 90, 20)) +
# label the day of the dates
geom_text(aes(label = day), color = "snow2", size = 3) +
theme_void() +
theme(legend.position = "right",
strip.text = element_text(hjust = 0, face = "bold", size = 13,
margin = margin(b = 3, unit = "pt")),
strip.clip = "off",
panel.spacing = unit(10, "pt"),
axis.text.x = element_text(color = "snow4", size = 7,
margin = margin(b = 3, unit = "pt")),
strip.placement = "outside",
plot.margin = margin(rep(10, 4), unit = "pt")) +
coord_cartesian(clip = "off") +
scale_x_discrete(position = "top") +
# adjust colorbar
guides(fill = guide_colorbar(
barheight = unit(200, unit = "pt"),
barwidth = unit(10, unit = "pt"),
title.position = "left",
title.theme = element_text(
angle = 90, hjust = .5,
margin = margin(l = 10, r = 10, unit = "pt"))))
l %>%
ggplot(aes(x = wday, y = week, fill = `Max Humidity`)) +
geom_raster() +
facet_wrap(~month, scales = "free", nrow = 3) +
scale_fill_viridis_c(option = "G",
breaks = seq(60, 100, 5),
trans = "log") +
# label the day of the dates
geom_text(aes(label = day), color = "snow2", size = 3) +
theme_void() +
theme(legend.position = "right",
strip.text = element_text(hjust = 0, face = "bold", size = 13,
margin = margin(b = 3, unit = "pt")),
strip.clip = "off",
panel.spacing = unit(10, "pt"),
axis.text.x = element_text(color = "snow4", size = 7,
margin = margin(b = 3, unit = "pt")),
strip.placement = "outside",
plot.margin = margin(rep(10, 4), unit = "pt")) +
coord_cartesian(clip = "off") +
scale_x_discrete(position = "top") +
# adjust colorbar
guides(fill = guide_colorbar(
barheight = unit(200, unit = "pt"),
barwidth = unit(10, unit = "pt"),
title.position = "left",
title.theme = element_text(
angle = 90, hjust = .5,
margin = margin(l = 10, r = 10, unit = "pt"))))
(6 * 0.718)
