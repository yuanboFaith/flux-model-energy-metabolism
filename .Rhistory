p2 <- plot_grid(plt.O2 , b, plt.RER , b, plt.calorie,
nrow = 1, rel_widths = c(1, .1, 1, .1, 1))
plot_grid(p1, p2, nrow = 2, align = "v")
ggsave(filename = "basic physiology.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 8, width = 14)
# ANCOVA analysis
d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW)
View(d.energyExpenditure)
# ANCOVA analysis
d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW)
d.animal
d.animal %>% select(phenotype, mouse_ID, BW) %>%
group_by(mouse_ID, phenotype)
# plot body weight using the serum-labeling experiment infusion
d.BW2 <- d.animal %>% select(phenotype, mouse_ID, BW) %>%
group_by(mouse_ID, phenotype) %>%
summarise(BW = mean(BW)) %>%
filter(phenotype != "db/db")
View(d.BW2)
d.BW2
d.BW2 %>% select(phenotype, BW) %>% table()
d.BW2 %>% select(phenotype, mouse_ID) %>% table()
d.BW2
# plot body weight using the serum-labeling experiment infusion
d.BW2 <- d.animal %>% select(phenotype, mouse_ID, BW) %>%
group_by(mouse_ID, phenotype) %>%
summarise(BW = mean(BW)) %>%
filter(phenotype != "db/db")
plt.BW <- func.plt.basicsPhysiology(
mydata = d.BW2 %>% group_by(mouse_ID, phenotype) %>% summarise(BW = mean(BW)),
whichY = "BW", mytitle = "body weight") +
scale_y_continuous(breaks = seq(0, 80, 15),limits = c(0, NA),
name = "gram",
expand = expansion(mult = c(0, .1)))
plt.BW <- (plt.BW +
geom_segment(data = s <- d.BW2 %>% ungroup() %>%
pairwise_t_test(BW ~ phenotype, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "phenotype") %>%
func.sig1(y.max.up = 4, y.min.down = 4, xmin.max.shift = -1),
aes(x = xmin, xend = xmax, y = y.position, yend = y.position), inherit.aes = F))  %>%
func.sig2()
plt.BW
# Glycemia (from the 13CO2 measurement experiments)
d.glycemia <- d.mouseID %>%
filter(phenotype %in% c("WT", "ob/ob", "HFD")) %>%
mutate(phenotype = factor(phenotype, levels = c("WT", "HFD", "ob/ob", "db/db"))) %>%
mutate(glycemia = as.numeric(`glycemia.mg/dL-basal`))
plt.glycemia <- d.glycemia %>%
func.plt.basicsPhysiology(whichY = "glycemia") +
scale_y_continuous(
breaks = seq(0, 600, 100), limits = c(0, NA),
name = "mg / dL", expand = expansion(mult = c(0, .1)),
sec.axis = sec_axis(trans = ~ . / 180 * 10, name = "mM"))
plt.glycemia <- (plt.glycemia +
geom_segment(data = s <- d.glycemia %>% ungroup() %>%
pairwise_t_test(glycemia ~ phenotype, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "phenotype") %>%
func.sig1(),
aes(x = xmin, xend = xmax, y = y.position, yend = y.position), inherit.aes = F))  %>%
func.sig2()
plt.glycemia
# - total energy expenditure
d.energyExpenditure <- d.infusion.stable.summary1 %>%
mutate(O2.L.min = O2.umol.min / 10^6 * 22.4,
CO2.L.min = CO2.umol.min / 10^6 * 22.4) %>%
# energy expenditure using Weir's formula
mutate(kcal.h = (3.941 * O2.L.min + 1.106 * CO2.L.min) * 1440 / 24,
cal.min = kcal.h / 60 * 1000 )
plt.calorie <- d.energyExpenditure %>%
func.plt.basicsPhysiology(whichY = "cal.min", mytitle = "energy expenditure") +
scale_y_continuous(
name = "cal / min",
breaks = seq(0, 12, 3),
limits = c(0, NA),
expand = expansion(mult = c(0, .1)),
sec.axis = sec_axis(trans = ~. * 60 / 1000,
name = "kcal / h"))
plt.calorie <- (plt.calorie +
geom_segment(data = s <- d.energyExpenditure %>% ungroup() %>%
pairwise_t_test(cal.min ~ phenotype, p.adjust.method = "bonferroni") %>%
func.sig1(y.max.up = 1, y.min.down = 1),
aes(x = xmin, xend = xmax, y = y.position, yend = y.position), inherit.aes = F))  %>%
func.sig2()
plt.calorie
# plot all together
b <- ggplot() + theme_void()
p1 <- plot_grid(plt.BW , b, plt.glycemia , b, plt.CO2,
nrow = 1, rel_widths = c(1, .1, 1, .1, 1))
p2 <- plot_grid(plt.O2 , b, plt.RER , b, plt.calorie,
nrow = 1, rel_widths = c(1, .1, 1, .1, 1))
# ANCOVA analysis
d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW)
d.energyExpenditure
# ANCOVA analysis
d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW)
# ANCOVA analysis
d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index")
# ANCOVA analysis
d.energyExpenditure.selected <- d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW)
d.energyExpenditure.selected
d.energyExpenditure.selected
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) + geom_point()
d.energyExpenditure.selected
d.energyExpenditure.selected %>% select(-BW)
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index")
d.energyExpenditure.selected
d.energyExpenditure.selected %>% select(mouseID, BW)
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index") %>%
left_join(d.energyExpenditure.selected %>% select(mouseID, BW), by = "mouseID")
d.energyExpenditure.selected %>% select(mouseID, BW), by = "mouseID"
d.energyExpenditure.selected %>% select(mouseID, BW)
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index")
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index") %>%
left_join(d.energyExpenditure.selected %>% select(mouseID, BW, phenotype))
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index")
d.energyExpenditure.selected %>% select(mouseID, BW, phenotype)
d.energyExpenditure.selected %>% select(mouseID, BW, phenotype) %>% complete.cases()
d.BW.respirometry <- d.energyExpenditure.selected %>% select(mouseID, BW, phenotype)
complete.cases(d.BW.respirometry)
d.BW.respirometry[complete.cases(d.BW.respirometry), ]
d.BW.respirometry <- d.BW.respirometry[complete.cases(d.BW.respirometry), ]
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index") %>%
left_join(d.BW.respirometry)
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index")
d.BW.respirometry
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index")
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index") %>%
left_join(d.BW.respirometry)
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index")
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index")
d.BW.respirometry
View(d.BW.respirometry)
d.energyExpenditure.selected
# ANCOVA analysis
d.energyExpenditure.selected <- d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW)
d.BW.respirometry <- d.energyExpenditure.selected %>% select(mouseID, BW, phenotype)
d.BW.respirometry <- d.BW.respirometry[complete.cases(d.BW.respirometry), ]
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index") %>%
left_join(d.BW.respirometry)
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index") %>%
left_join(d.BW.respirometry, by = c("phenotype", "mouseID"))
d.energyExpenditure.selected
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index")
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index") %>%
inner_join(d.BW.respirometry, by = c("phenotype", "mouseID"))
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index")
d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index") %>%
left_join(d.BW.respirometry, by = c("phenotype", "mouseID"))
x <- d.energyExpenditure.selected %>% select(-BW) %>%
pivot_longer(-c(phenotype, mouseID), values_to = "value", names_to = "index") %>%
left_join(d.BW.respirometry, by = c("phenotype", "mouseID"))
x[complete.cases(x), ]
x <- x[complete.cases(x), ]
x %>% ggplot(aes(BW, value, colo = phenotype)) + geom_point() +
facet_wrap(~index)
x %>% ggplot(aes(BW, value, colo = phenotype)) + geom_point() +
facet_wrap(~index, scales = "free")
x %>% ggplot(aes(BW, value, color = phenotype)) + geom_point() +
facet_wrap(~index, scales = "free")
x %>% ggplot(aes(BW, value, color = phenotype)) + geom_point() +
facet_wrap(~index, scales = "free") +
geom_smooth(method = "lm", se = F)
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) + geom_point()
# ANCOVA analysis
d.energyExpenditure.selected <- d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW) +
geom_smooth(method = "lm", se = F)
# ANCOVA analysis
d.energyExpenditure.selected <- d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW)
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) + geom_point() +
geom_smooth(method = "lm", se = F)
d.energyExpenditure.selected
glm(O2.L.min ~ BW + phenotype + BW:phenotype, data = d.energyExpenditure.selected)
model.glm <- glm(O2.L.min ~ BW + phenotype + BW:phenotype,
data = d.energyExpenditure.selected,
family = gaussian(link = "identity"))
summarise(model.glm)
model.glm <- glm(O2.L.min ~ BW + phenotype + BW:phenotype,
data = d.energyExpenditure.selected,
family = gaussian(link = "identity"))
summarise(model.glm)
summary(model.glm)
model.glm <- glm(O2.L.min ~ BW + phenotype,
data = d.energyExpenditure.selected,
family = gaussian(link = "identity"))
summary(model.glm)
summary(model.glm)
# ANCOVA analysis
d.energyExpenditure.selected <- d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW, RER)
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) + geom_point() +
geom_smooth(method = "lm", se = F)
model.glm <- glm(RER ~ BW + phenotype,
data = d.energyExpenditure.selected,
family = gaussian(link = "identity"))
summary(model.glm)
model.glm <- glm(RER ~ phenotype,
data = d.energyExpenditure.selected,
family = gaussian(link = "identity"))
summary(model.glm)
model.glm <- glm(O2.L.min ~ BW + phenotype,
data = d.energyExpenditure.selected,
family = gaussian(link = "identity"))
summary(model.glm)
model.glm <- glm(CO2.L.min ~ BW + phenotype,
data = d.energyExpenditure.selected,
family = gaussian(link = "identity"))
summary(model.glm)
# ANCOVA test
model.glm <- glm(CO2.L.min ~ BW + phenotype,
data = d.energyExpenditure.selected,
family = gaussian(link = "identity"))
summary(model.glm)
func.plt.basicsPhysiology(whichY = "BW", mytitle = "O2 consumption")
func.plt.basicsPhysiology(whichY = "BW", mytitle = "BW")
func.plt.basicsPhysiology(whichY = "BW", mytitle = "BW")
# load basic animal information from the ordinary infusion experiments
p <- c("db/db", "WT", "HFD", "ob/ob")
names(p) <- c("d", "L", "H", "O")
mypath = "/Users/boyuan/Desktop/Harvard/Research/db db mice/Infusion data/infusion rounds data.xlsx"
d.animal  <-  read_excel(path = mypath, sheet = "infusion rounds", skip = 7) %>%
mutate(phenotype = str_extract(mouse_ID, "[a-zA-Z]+")) %>%
mutate(phenotype = p[phenotype] %>% factor(levels = p) )
# plot body weight using the serum-labeling experiment infusion
d.BW2 <- d.animal %>% select(phenotype, mouse_ID, BW) %>%
group_by(mouse_ID, phenotype) %>%
summarise(BW = mean(BW)) %>%
filter(phenotype != "db/db")
plt.BW <- func.plt.basicsPhysiology(
mydata = d.BW2 %>% group_by(mouse_ID, phenotype) %>% summarise(BW = mean(BW)),
whichY = "BW", mytitle = "body weight") +
scale_y_continuous(breaks = seq(0, 80, 15),limits = c(0, NA),
name = "gram",
expand = expansion(mult = c(0, .1)))
plt.BW <- (plt.BW +
geom_segment(data = s <- d.BW2 %>% ungroup() %>%
pairwise_t_test(BW ~ phenotype, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "phenotype") %>%
func.sig1(y.max.up = 4, y.min.down = 4, xmin.max.shift = -1),
aes(x = xmin, xend = xmax, y = y.position, yend = y.position), inherit.aes = F))  %>%
func.sig2()
plt.BW
# Glycemia (from the 13CO2 measurement experiments)
d.glycemia <- d.mouseID %>%
filter(phenotype %in% c("WT", "ob/ob", "HFD")) %>%
mutate(phenotype = factor(phenotype, levels = c("WT", "HFD", "ob/ob", "db/db"))) %>%
mutate(glycemia = as.numeric(`glycemia.mg/dL-basal`))
plt.glycemia <- d.glycemia %>%
func.plt.basicsPhysiology(whichY = "glycemia") +
scale_y_continuous(
breaks = seq(0, 600, 100), limits = c(0, NA),
name = "mg / dL", expand = expansion(mult = c(0, .1)),
sec.axis = sec_axis(trans = ~ . / 180 * 10, name = "mM"))
plt.glycemia <- (plt.glycemia +
geom_segment(data = s <- d.glycemia %>% ungroup() %>%
pairwise_t_test(glycemia ~ phenotype, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "phenotype") %>%
func.sig1(),
aes(x = xmin, xend = xmax, y = y.position, yend = y.position), inherit.aes = F))  %>%
func.sig2()
plt.glycemia
# - total energy expenditure
d.energyExpenditure <- d.infusion.stable.summary1 %>%
mutate(O2.L.min = O2.umol.min / 10^6 * 22.4,
CO2.L.min = CO2.umol.min / 10^6 * 22.4) %>%
# energy expenditure using Weir's formula
mutate(kcal.h = (3.941 * O2.L.min + 1.106 * CO2.L.min) * 1440 / 24,
cal.min = kcal.h / 60 * 1000 )
plt.calorie <- d.energyExpenditure %>%
func.plt.basicsPhysiology(whichY = "cal.min", mytitle = "energy expenditure") +
scale_y_continuous(
name = "cal / min",
breaks = seq(0, 12, 3),
limits = c(0, NA),
expand = expansion(mult = c(0, .1)),
sec.axis = sec_axis(trans = ~. * 60 / 1000,
name = "kcal / h"))
plt.calorie <- (plt.calorie +
geom_segment(data = s <- d.energyExpenditure %>% ungroup() %>%
pairwise_t_test(cal.min ~ phenotype, p.adjust.method = "bonferroni") %>%
func.sig1(y.max.up = 1, y.min.down = 1),
aes(x = xmin, xend = xmax, y = y.position, yend = y.position), inherit.aes = F))  %>%
func.sig2()
plt.calorie
# plot all together
b <- ggplot() + theme_void()
p1 <- plot_grid(plt.BW , b, plt.glycemia , b, plt.CO2,
nrow = 1, rel_widths = c(1, .1, 1, .1, 1))
p2 <- plot_grid(plt.O2 , b, plt.RER , b, plt.calorie,
nrow = 1, rel_widths = c(1, .1, 1, .1, 1))
plot_grid(p1, p2, nrow = 2, align = "v")
ggsave(filename = "basic physiology.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 8, width = 14)
# ANCOVA analysis
d.energyExpenditure.selected <- d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW, RER)
# plot
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) + geom_point() +
geom_smooth(method = "lm", se = F)
# ANCOVA test
model.glm <- glm(CO2.L.min ~ BW + phenotype,
data = d.energyExpenditure.selected,
family = gaussian(link = "identity"))
# ANCOVA analysis
d.energyExpenditure.selected <- d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW, RER) +
theme_bw()
# ANCOVA analysis
d.energyExpenditure.selected <- d.energyExpenditure %>% ungroup() %>%
select(phenotype, mouseID, CO2.L.min, O2.L.min, cal.min, BW, RER) +
theme.myClassic
# plot
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) + geom_point() +
geom_smooth(method = "lm", se = F) +
theme.mybw
# plot
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) + geom_point() +
geom_smooth(method = "lm", se = F) +
theme_classic()
# plot
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) + geom_point() +
geom_smooth(method = "lm", se = F) +
theme.myClassic
# plot
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) +
geom_point(size = 3, alpha = .6) +
geom_smooth(method = "lm", se = F) +
theme.myClassic
# plot
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) +
geom_point(size = 3, alpha = .5) +
geom_smooth(method = "lm", se = F) +
theme.myClassic
# plot
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) +
geom_point(size = 3, alpha = .5) +
geom_smooth(method = "lm", se = F) +
theme.myClassic +
scale_color_manual(values = color.phenotype)
# ANCOVA test
model.glm <- glm(CO2.L.min ~ BW + phenotype,
data = d.energyExpenditure.selected,
family = gaussian(link = "identity"))
summary(model.glm)
# plot
d.energyExpenditure.selected %>%
ggplot(aes(BW, CO2.L.min, color = phenotype)) +
geom_point(size = 3, alpha = .5) +
geom_smooth(method = "lm", se = F) +
theme.myClassic +
scale_color_manual(values = color.phenotype)
ggsave(filename = "BW_energy_expenditure_ANCOVA.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 6, width = 6)
ggsave(filename = "BW_energy_expenditure_ANCOVA.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 4, width = 5)
# ANCOVA test
model.glm <- glm(CO2.L.min ~ BW + phenotype,
data = d.energyExpenditure.selected,
family = gaussian(link = "identity"))
summary(model.glm)
rm(list=ls())
library(ComplexHeatmap)
library(scales) # for color scale
library(mgcv)
library(ggpmisc)
library(ggbeeswarm)
library(readxl)
library(RColorBrewer)
library(viridis)
library(ggsci)
library(rebus)
library(matrixStats)
library(limSolve)
library(xlsx)
library(cowplot)
library(rstatix)
library(ggpubr)
library(tidyverse)
load("/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/raw data/7_core_production_flux.RData")
options(dplyr.print_max = 4)
# import amino acid basics
path.aa <- "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/raw data/amino acid basics.xlsx"
d.aa <- read_excel(path.aa, sheet = "AA.basics")
d.aa$C.number <- d.aa$C.number %>% as.double()
# define function to count amino acid frequency in a protein
func.AA.count <- function(aminoAcid.sequence, whichProtein){
# split
seq.splitted = str_split(aminoAcid.sequence, pattern = "")[[1]]
# count
seq.count = table(seq.splitted) / length(seq.splitted) * 100
# organize into a data frame
t <- tibble(Abbreviation_2 = names(seq.count),
percent = c(seq.count))
colnames(t)[2] <- whichProtein
return(t)
}
# mouse myosin 1: Q5SX40 · MYH1_MOUSE : https://www.uniprot.org/uniprotkb/Q5SX40/entry#sequences
s1 <- "MSSDAEMAVFGEAAPYLRKSEKERIEAQNKPFDAKSSVFVVDAKESFVKATVQSREGGKVTAKTEGGTTVTVKDDQVYPMNPPKYDKIEDMAMMTHLHEPAVLYNLKERYAAWMIYTYSGLFCVTVNPYKWLPVYNAEVVAAYRGKKRQEAPPHIFSISDNAYQFMLTDRENQSILITGESGAGKTVNTKRVIQYFATIAVTGEKKKEEATSGKMQGTLEDQIISANPLLEAFGNAKTVRNDNSSRFGKFIRIHFGTTGKLASADIETYLLEKSRVTFQLKAERSYHIFYQIMSNKKPDLIEMLLITTNPYDYAFVSQGEITVPSIDDQEELMATDSAIDILGFTSDERVSIYKLTGAVMHYGNMKFKQKQREEQAEPDGTEVADKAAYLQNLNSADLLKALCYPRVKVGNEYVTKGQTVQQVYNSVGALAKAVYEKMFLWMVTRINQQLDTKQPRQYFIGVLDIAGFEIFDFNSLEQLCINFTNEKLQQFFNHHMFVLEQEEYKKEGIEWEFIDFGMDLAACIELIEKPMGIFSILEEECMFPKATDTSFKNKLYEQHLGKSNNFQKPKPAKGKVEAHFSLVHYAGTVDYNIAGWLDKNKDPLNETVVGLYQKSSMKTLAYLFSGAAAAAEAESGGGGGKKGAKKKGSSFQTVSALFRENLNKLMTNLRSTHPHFVRCIIPNETKTPGAMEHELVLHQLRCNGVLEGIRICRKGFPSRILYADFKQRYKVLNASAIPEGQFIDSKKASEKLLGSIDIDHTQYKFGHTKVFFKAGLLGLLEEMRDDKLAQLITRTQAMCRGYLARVEYQKMVERRESIFCIQYNVRAFMNVKHWPWMKLYFKIKPLLKSAETEKEMANMKEEFEKAKENLAKAEAKRKELEEKMVALMQEKNDLQLQVQSEADSLADAEERCDQLIKTKIQLEAKIKEVTERAEDEEEINAELTAKKRKLEDECSELKKDIDDLELTLAKVEKEKHATENKVKNLTEEMAGLDETIAKLTKEKKALQEAHQQTLDDLQAEEDKVNTLTKAKIKLEQQVDDLEGSLEQEKKIRMDLERAKRKLEGDLKLAQESTMDVENDKQQLDEKLKKKEFEMSNLQSKIEDEQALGMQLQKKIKELQARIEELEEEIEAERASRAKAEKQRSDLSRELEEISERLEEAGGATSAQIEMNKKREAEFQKMRRDLEEATLQHEATAATLRKKHADSVAELGEQIDNLQRVKQKLEKEKSEMKMEIDDLASNMEVISKSKGNLEKMCRTLEDQVSELKTKEEEQQRLINELTAQRGRLQTESGEYSRQLDEKDSLVSQLSRGKQAFTQQIEELKRQLEEEIKAKSALAHALQSSRHDCDLLREQYEEEQEAKAELQRAMSKANSEVAQWRTKYETDAIQRTEELEEAKKKLAQRLQDAEEHVEAVNAKCASLEKTKQRLQNEVEDLMIDVERTNAACAALDKKQRNFDKILAEWKQKYEETHAELEASQKESRSLSTELFKIKNAYEESLDHLETLKRENKNLQQEISDLTEQIAEGGKRIHELEKIKKQIEQEKSELQAALEEAEASLEHEEGKILRIQLELNQVKSEIDRKIAEKDEEIDQLKRNHIRVVESMQSTLDAEIRSRNDAIRLKKKMEGDLNEMEIQLNHSNRMAAEALRNYRNTQGILKDTQLHLDDALRGQEDLKEQLAMVERRANLLQAEIEELRATLEQTERSRKIAEQELLDASERVQLLHTQNTSLINTKKKLETDISQIQGEMEDIVQEARNAEEKAKKAITDAAMMAEELKKEQDTSAHLERMKKNLEQTVKDLQHRLDEAEQLALKGGKKQIQKLEARVRELEGEVENEQKRNVEAIKGLRKHERRVKELTYQTEEDRKNVLRLQDLVDKLQSKVKAYKRQAEEAEEQSNVNLAKFRKIQHELEEAEERADIAESQVNKLRVKSREVHTKIISEE"
s1 <- func.AA.count(aminoAcid.sequence = s1, whichProtein = "myosin I")
# mouse actin in sckeletal muscle : P68134 · ACTS_MOUSE : https://www.uniprot.org/uniprotkb/P68134/entry#sequences
s2 <- "MCDEDETTALVCDNGSGLVKAGFAGDDAPRAVFPSIVGRPRHQGVMVGMGQKDSYVGDEAQSKRGILTLKYPIEHGIITNWDDMEKIWHHTFYNELRVAPEEHPTLLTEAPLNPKANREKMTQIMFETFNVPAMYVAIQAVLSLYASGRTTGIVLDSGDGVTHNVPIYEGYALPHAIMRLDLAGRDLTDYLMKILTERGYSFVTTAEREIVRDIKEKLCYVALDFENEMATAASSSSLEKSYELPDGQVITIGNERFRCPETLFQPSFIGMESAGIHETTYNSIMKCDIDIRKDLYANNVMSGGTTMYPGIADRMQKEITALAPSTMKIKIIAPPERKYSVWIGGSILASLSTFQQMWITKQEYDEAGPSIVHRKCF"
s2 <- func.AA.count(aminoAcid.sequence = s2, whichProtein = "actin")
# collagen : Q63870 · CO7A1_MOUSE : https://www.uniprot.org/uniprotkb/Q63870/entry#sequences
s3 <- "MRLRLLVAALCAAEILMGAPEVWAQPRDRVTCTRLYAADIVFLLDGSSSIGRSNFREVRGFLEGLVLPFSGAASAQGVRFATVQYSDDPQTEFGLDTLGSGSDTIRAIRELSYKGGNTRTGAALHHVSDRVFLPRLTRPGVPKVCILITDGKSQDLVDTAAQKLKGQGVKLFAVGIKNADPEELKRVASQPTSDFFFFVNDFSILRTLLPLISRRVCTTAGGVPVTLPSDDTPSGPRDLVLSEPSSQSLRVQWTAASGPVTGYKVQYTPLTGLGQPLPSERQEVNIPAGETSTRLQGLRPLTDYQVTVVALYANSIGEAVSGTARTTAKEGLELSLQNITSHSLLVAWRRVPGANGYRVTWRDLSGGPTQQQDLSPGQGSVFLDHLEPGTDYEVTVSALFGHSVGPAASLTARTASSVEQTLHPIILSPTSILLSWNLVPEARGYRLEWRRESGLETPQKVELPPDVTRHQLDGLQPGTEYRLTLYTLLEGREVATPATVVPTGLEQLVSPVMNLQAIELPGQRVRVSWNPVPGATEYRFTVRTTQGVERTLLLPGSQTTFDLDDVRAGLSYTVRVSARVGAQEGDASILTIHRDPEAPLVVPGLRVVASDATRIRVAWGLVPGASGFRISWRTGSGPESSRTLTPDSTVTDILGLQPSTSYQVAVSALRGREEGPPVVIVARTDPLGPVRRVHLTQAGSSSVSITWTGVPGATGYRVSWHSGHGPEKSLLVSGDATVAEIDGLEPDTEYIVRVRTHVAGVDGAPASVVVRTAPEPVGSVSKLQILNASSDVLRVTWVGVPGATSYKLAWGRSEGGPMKHRILPGNKESAEIRDLEGGVSYSVRVTALVGDREGAPVSIVITTPPATPALLETLQVVQSGEHSLRLRWEPVPGAPGFRLHWQPEGGQEQSLTLGPESNSYNLVGLEPATKYQVWLTVLGQTGEGPPRKVTAYTEPSHIPSTELRVVDTSIDSVTLTWTPVSGASSYILSWRPLRGTGQEVPRAPQTLPGTSSSHRVTGLEPGISYVFSLTPIQSGVRGSEISVTQTPACSHGPVDVVFLLHATRDNAHNAEAVRRVLERLVSALGPLGPQAAQVGLLTYSHRPSPLFPLNSSHDLGIILRKIRDIPYVDPSGNNLGTAVTTAHRYLLASNAPGRRQQVPGVMVLLVDEPLRGDILSPIREAQTSGLKVMALSLVGADPEQLRRLAPGTDPIQNFFAVDNGPGLDRAVSDLAVALCQAAVTIEPQTGPCAVHCPKGQKGEPGVTGLQGQAGPPGPPGLPGRTGAPGPQGPPGSTQAKGERGFPGPEGPPGSPGLPGVPGSPGIKGSTGRPGPRGEQGERGPQGPKGEPGEPGQITGGGGPGFPGKKGDPGPSGPPGSRGPVGDPGPRGPPGLPGISVKGDKGDRGERGPPGPGIGASEQGDPGLPGLPGSPGPQGPAGRPGEKGEKGDCEDGGPGLPGQPGPPGEPGLRGAPGMTGPKGDRGLTGTPGEPGVKGERGHPGPVGPQGLPGAAGHPGVEGPEGPPGPTGRRGEKGEPGRPGDPAVGPGGAGAKGEKGEAGLPGPRGASGSKGEQGAPGLALPGDPGPKGDPGDRGPIGLTGRAGPTGDSGPPGEKGEPGRPGSPGPVGPRGRDGEAGEKGDEGIPGEPGLPGKAGERGLRGAPGPRGPVGEKGDQGDPGEDGRNGSPGSSGPKGDRGEPGPPGPPGRLVDAGIESRDKGEPGQEGPRGPKGDPGPPGVSGERGIDGLRGPPGPQGDPGVRGPAGDKGDRGPPGLDGRSGLDGKPGAPGPPGLHGASGKAGDPGRDGLPGLRGEHGPPGPPGPPGVPGKAGDDGKPGLNGKNGDPGDPGEDGRKGEKGDSGAPGREGPDGPKGERGAPGNPGLQGPPGLPGQVGPPGQGFPGVPGITGPKGDRGETGSKGEQGLPGERGLRGEPGSLPNAERLLETAGIKVSALREIVDTWDESSGSFLPVPERRPGPKGDPGDRGPPGKEGLIGFPGERGLKGERGDPGPQGPPGLALGERGPPGPPGLAGEPGKPGIPGLPGRAGGSGEAGRPGERGERGEKGERGDQGRDGLPGLPGPPGPPGPKVAIEEPGPGLAREQGPPGLKGAKGEPGSDGDPGPKGDRGVPGIKGDVGEPGKRGHDGNPGLPGERGVAGPEGKPGLQGPRGTPGPVGSHGDPGPPGAPGLAGPAGPQGPSGLKGEPGETGPPGRGLPGPVGAVGLPGPPGPSGLVGPQGSPGLPGQVGETGKPGPPGRDGSSGKDGDRGSPGVPGSPGLPGPVGPKGEPGPVGAPGQVVVGPPGAKGEKGAPGDLAGALLGEPGAKGDRGLPGPRGEKGEAGRAGGPGDPGEDGQKGAPGLKGLKGEPGIGVQGPPGPSGPPGMKGDLGPPGAPGAPGVVGFPGQTGPRGETGQPGPVGERGLAGPPGREGAPGPLGPPGPPGSAGAPGASGLKGDKGDPGAGLPGPRGERGEPGVRGEDGHPGQEGPRGLVGPPGSRGEQGEKGAAGAAGLKGDKGDSAVIEGPPGPRGAKGDMGERGPRGIDGDKGPRGESGNPGDKGSKGEPGDKGSAGSIGVRGLTGPKGEPGAAGIPGEPGAPGKDGIPGFRGDKGDIGFMGPRGLKGEKGIKGTCGRDGERGDKGEAGFPGRPGLAGKKGDMGEPGLPGQSGAPGKEGLIGPKGDRGFDGQSGPKGDQGEKGERGPPGVGGFPGPRGNDGSSGPPGPPGGVGPKGPEGLQGQKGERGPPGESVVGAPGAPGTPGERGEQGRPGPAGPRGEKGEAALTEDDIRDFVRQEMSQHCACQGQFIASGSRPLPGYAADTAGSQLHHVPVLRVSHVEEEGQVPPEDDDDFSEYSVYSVEDYQEPEVPWDGEAEIKGWDQRGSDLCSLPLDEGSCTAYTLRWYHRAVPGGTACHPFVYGGCGGNANRFGTREACERRCPPQGVHSQKTGAA"
s3 <- func.AA.count(aminoAcid.sequence = s3, whichProtein = "collagen")
s <- left_join(s1, s2) %>% left_join(s3)
# combine with amino acid basics dataset
s.all <- s %>% left_join(d.aa, by = "Abbreviation_2") %>%
select(aminoAcids, C.number, Abbreviation_1, `myosin I`, actin, collagen)
# tidy and calculate carbon percent
s.all.carbon.pct <- s.all %>%
pivot_longer(-c(aminoAcids, C.number, Abbreviation_1), names_to = "protein", values_to = "pct") %>%
group_by(protein) %>%
mutate(pct_C.atom = C.number * pct / sum(C.number * pct) * 100) %>%
# put both molecule and carbon-based fraction into a single column
pivot_longer(contains("pct"), names_to = "base", values_to = "pct") %>%
# mark BCAA
mutate(whichAA = ifelse(aminoAcids %in% (BCAA <- c("Leucine", "Isoleucine", "Valine")), aminoAcids, "others")) %>%
# protein in order
mutate(protein = factor(protein, levels = c("myosin I", "actin", "collagen" )))
s.all.carbon.pct
# summary, grouping non-BCAA together
s.all.carbon.pct.summary <- s.all.carbon.pct %>%
group_by(protein, whichAA, base) %>%
summarise(pct = sum(pct)) %>%
mutate(whichAA = factor(whichAA, levels = c("Valine", "Leucine", "Isoleucine", "others") %>% rev()))
# plot
func.plt.AA <- function(mydata){
mydata %>%
ggplot(aes(protein, y = pct, fill = whichAA)) +
facet_wrap(~base) +
# column border for BCAA only
geom_col(alpha = .7, color = "black") +
# label with percentage
geom_text(aes(label = paste(round(pct, 1), "%")),
position = position_stack(vjust = .5),
hjust = .5) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20)) +
scale_x_discrete(expand = expansion(add = .8)) +
labs(x = NULL, y = "amino acid %") +
scale_fill_manual(values = c("grey90", "orange", "steelblue1", "tomato"))
}
plt.aa.composition <- s.all.carbon.pct.summary %>%
filter(protein != "collagen") %>%
filter(base == "pct") %>%
func.plt.AA() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow = 2)) +
facet_wrap(~"")
plt.aa.composition
s.all.carbon.pct.summary
# outupt the dataset
s.all.carbon.pct.summary
# outupt the dataset
s.all.carbon.pct.summary %>% spread(base, pct)
s.all
# outupt the dataset
s.all
s.all
s.all.carbon.pct
s.all.carbon.pct
s.all.carbon.pct %>%
select(-last_col())
s.all.carbon.pct %>%
select(-last_col()) %>%
spread(base, pct)
s.all.carbon.pct %>%
select(-last_col()) %>%
spread(base, pct) %>% view()
