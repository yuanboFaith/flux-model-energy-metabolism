mutate(error.y = cumsum(C3))
# Combine dataset together
d.C3.all <- d.C3.source %>% rbind(d.C3.needed) %>%
mutate(phenotype = str_replace(phenotype, "WT", "control"))
# plot
d.C3.all %>%
ggplot(aes(x = direction, y = C3, fill = Compounds)) +
geom_col(alpha = .6, color = "black") +
geom_errorbar(aes(ymax = error.y,
ymin = error.y - C3.SEM),
width = .3) +
facet_wrap(~phenotype) +
scale_fill_viridis_d(option = "H") +
scale_x_discrete(expand = expansion(add = .8)) +
scale_y_continuous(expand = expansion(mult = c(0, .1)),
breaks = seq(0, 3000, 500),
labels = function(x){x/1000}) +
labs(y = "C3 flux ( Âµmol / min )", x = NULL) +
theme.myClassic +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y.left = element_text(margin = margin(r = 15)),
strip.text = element_text(size = 14, face = "bold"))
ggsave(filename = "glycerol recycle.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 3*1.1, width = 6*1.1)
s.all.carbon.pct
# summary, grouping non-BCAA together
s.all.carbon.pct.summary <- s.all.carbon.pct %>%
group_by(protein, whichAA, base) %>%
summarise(pct = sum(pct)) %>%
mutate(whichAA = factor(whichAA, levels = c("Valine", "Leucine", "Isoleucine", "others") %>% rev()))
# plot
func.plt.AA <- function(mydata){
mydata %>%
ggplot(aes(protein, y = pct, fill = whichAA)) +
facet_wrap(~base) +
# column border for BCAA only
geom_col(alpha = .7, color = "black") +
# label with percentage
geom_text(aes(label = paste(round(pct, 1), "%")),
position = position_stack(vjust = .5),
hjust = .5) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20)) +
scale_x_discrete(expand = expansion(add = .8)) +
labs(x = NULL, y = "amino acid %") +
scale_fill_manual(values = c("grey90", "orange", "steelblue1", "tomato"))
}
plt.aa.composition <- s.all.carbon.pct.summary %>%
filter(protein != "collagen") %>%
filter(base == "pct") %>%
func.plt.AA() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow = 2)) +
facet_wrap(~"")
plt.aa.composition
ggsave(filename = "amino acid distribution.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 4.5, width = 3)
# ATOM-based correction factor
favorite <- s.all.carbon.pct.summary %>%
filter(protein != "collagen" & base == "pct_C.atom" & whichAA == "Valine")
correct.factor.aminoAcids <- 100 / mean(favorite$pct)
# MOLECULE-based corretion factor
favorite2 <- s.all.carbon.pct.summary %>%
filter(protein != "collagen" & base == "pct" & whichAA == "Valine")
correct.factor.aminoAcids.molecule <- 100 / mean(favorite2$pct)
# plot glutamine and glutamate
s.all %>%
filter(aminoAcids %in% c("Glutamate", "Glutamine"))
d.FA.content <- read_excel(
"/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/raw data/fatty acids content in serum.xlsm",
skip = 1, range = "A2:AA26")
# average content
d.FA.content.summary <- d.FA.content %>%
select(-formula) %>%
pivot_longer(-c(compound, C_number), names_to = "phenotype", values_to = "conc.") %>%
mutate(phenotype = str_remove(phenotype, "_" %R% DIGIT) %>% factor(levels = ordered.phenotype),
C_number = as.double(C_number)) %>%
group_by(compound,C_number, phenotype) %>%
summarise(conc.mean = mean(conc.))
d.FA.content.summary
# visualize TIC intensity (likely molecule basis)
d.FA.content.summary %>% ungroup() %>%
mutate(compound = fct_reorder(compound, conc.mean, .fun = mean)) %>%
ggplot(aes(x = phenotype, y = conc.mean, fill = compound)) +
geom_col(color = "black") +
geom_text(aes(label = compound),
position = position_stack(vjust = .5)) +
scale_fill_viridis_d(option = "B") +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, .1))) +
scale_x_discrete(expand = expansion(add = .8)) +
theme(legend.position = "none") +
labs(y = "TIC intensity")
# calculate relative percent on an atom basis
d.FA.carbon_pct <- d.FA.content.summary %>%
filter(C_number <= 20) %>%
group_by(phenotype) %>%
mutate(C.pct = (conc.mean * C_number) / sum(conc.mean * C_number) * 100,
top3 = ifelse(compound %in% c("C16:0", "C18:1", "C18:2"), compound, "others"))
# average carbon number in a FA (for later reesterification calculation)
d.FA.length.mean <- d.FA.carbon_pct %>%
group_by(phenotype) %>%
summarise(C.number_average = sum(C.pct * C_number) / sum(C.pct))
# on average, there are 17.8 atoms in a NEFA. This number will be used to calculate the reesterification rate
average.C.of.FA <- d.FA.length.mean$C.number_average %>% mean()
# group all - non-top3 NEFA
d.FA.carbon_pct.summary <- d.FA.carbon_pct %>%
group_by(phenotype, top3) %>%
summarise(C.pct = sum(C.pct)) %>%
mutate(top3 = factor(top3, levels = c("C16:0", "C18:1", "C18:2", "others") ))
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 1) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5) +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip() +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
# geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 1) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5) +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
# geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 1) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5) +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip() +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 1) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5) +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip() +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 1) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "blue") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip() +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 1) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "blue") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
coord_cartesian(clip = "off") +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip() +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 1) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "blue", fontface = "bold") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
coord_cartesian(clip = "off") +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 1) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "blue", fontface = "bold") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
coord_cartesian(clip = "off") +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip() +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 1) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "cyan", fontface = "bold") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 1) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 4.5, color = "cyan", fontface = "bold") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
mydata
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 0) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "cyan", fontface = "bold") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 0) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "black", fontface = "bold") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 0) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "black", fontface = "bold") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 0) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "black") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 0) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "white") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 0) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "white") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
# plot
func.plt.FA <- function(mydata, colwidth = .9){
mydata %>%
ggplot(aes(x = phenotype, y = C.pct, fill = top3)) +
geom_col(color = "black", position = position_stack(reverse = T), width =  colwidth) +
geom_text(aes(label = round(C.pct, 0) %>% paste("%")),
position = position_stack(vjust = .5, reverse = T),
size = 5, color = "black") +
labs(y = "carbon % in NEFA", x = NULL) +
scale_fill_manual(values = c("grey95", "pink", "turquoise", "yellow") %>% rev()) +
guides(fill = guide_legend(reverse = T)) +
theme.myClassic +
scale_y_continuous(expand = expansion(mult = c(0, 0)),
breaks = seq(0, 100, 20))
}
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)))
plt.FA.composition.WT
ggsave(filename = "fatty acid distribution WT.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 3, width = 5.5)
plt.FA.composition.WT
plt.FA.composition.WT + labs(y = NULL)
plt.FA.composition.WT + labs(x = NULL)
plt.FA.composition.WT + labs(y = NULL)
plt.FA.composition.WT + labs(x = NULL)
plt.FA.composition.WT + labs(x = NULL, y = NULL)
d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)),
axis.text.y = element_blank())
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)),
axis.text.y = element_blank())
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)),
axis.text.y = element_blank(),
axis.ticks.x = element_blank())
ggsave(filename = "fatty acid distribution WT.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 3, width = 5.5)
plt.FA.composition.WT
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)),
axis.text.y = element_blank(),
axis.ticks.x = element_blank())
# WT
plt.FA.composition.WT <- d.FA.carbon_pct.summary %>%
filter(phenotype == "WT") %>% func.plt.FA(colwidth = .5) +
guides(fill = guide_legend(nrow = 4)) +
coord_flip(clip = "off") +
theme(plot.margin = margin(rep(10, 4)),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
plt.FA.composition.WT
ggsave(filename = "fatty acid distribution WT.pdf",
path = "/Users/boyuan/Desktop/Harvard/Manuscript/1. fluxomics/R Figures",
height = 3, width = 5.5)
